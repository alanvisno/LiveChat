// <auto-generated />
using System;
using LiveChat.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LiveChat.Migrations
{
    [DbContext(typeof(LiveChatContext))]
    partial class LiveChatContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LiveChat.Context.Contact", b =>
                {
                    b.Property<string>("PrincipalId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SecondaryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PrincipalId", "SecondaryId");

                    b.HasIndex("SecondaryId");

                    b.ToTable("Contact");

                    b.HasData(
                        new
                        {
                            PrincipalId = "89a32b87-e6da-4997-bf33-bafec658e446",
                            SecondaryId = "5bdc1f62-5129-401f-8725-01b323a3ab45"
                        });
                });

            modelBuilder.Entity("LiveChat.Context.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrincipalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondaryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("String")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("LiveChat.Context.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = "89a32b87-e6da-4997-bf33-bafec658e446",
                            Image = "https://www.lifebonder.com/imagelink",
                            Name = "Alan Visnovezky",
                            Password = "0Fa1UhslO5lsMPL862LDVhcylDuBTrMFeIFGvt/HezI="
                        },
                        new
                        {
                            Id = "5bdc1f62-5129-401f-8725-01b323a3ab45",
                            Image = "https://www.lifebonder.com/imagelink",
                            Name = "Jesper Simonsen",
                            Password = "Ib89eldClKfWRyplrngFQsMbvTU97neXAnqwFqH58a8="
                        });
                });

            modelBuilder.Entity("LiveChat.Context.Contact", b =>
                {
                    b.HasOne("LiveChat.Context.User", "PrincipalUser")
                        .WithMany("ContactsAsPrincipal")
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LiveChat.Context.User", "SecondaryUser")
                        .WithMany("ContactsAsSecondary")
                        .HasForeignKey("SecondaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
